BLOC1, 2, 3 ensemble
BLOC4 séparé

//////////////////////////////////////////////////////
BLOC1:
-necessite choix de dev:

-attente classique:
1.1besoin final des données, problématique, moyens a mettre en place, sources de données
1.2méthodologie d'exécution(api, websocket, scrapping), verification de l exactitude des données récupérés
1.3Explication choix et comment on a automatisé la récurence de la pipeline
2.1explication du choix de la bdd(pourquoi cloud: accessibilité, disponibilité, stockage infini, etc)
2.2choix de la techno de la bdd (pourquoi MongoDB ?)
3.1techno et langage utilisés pour l etl et explication des choix(pourquoi flask, pourquoi python)
3.2explications sur certaines transformations, nettoyage de donnéess, structuration de la données par l ETL
3.3explication complete de la pipeline et scheduler
4.1explication des actions mises en œuvre pour la sécurité (fichier .env avec mdp pas mis sur GitHub, gitignore, backup de bdd avec extract sh sur un S3, etc)
4.2 Schéma de securisation des données (docker sécurisé, flask non accessible, s3 non accessible en privé, MongoDB non accessible sans la clé privé)(rechercher google schema d'architecture de sécurité bdd)

BLOC2:
-necessite choix de dev:

-attente classique:
1.1Definition du besoin, de la problématique
1.2 Définition des attentes
1.3 Réalisation d'analyse rapide sur des outils permettant l'analyse afin de répondre aux besoins
1.4 Jugement des résultats d'analyses trouvé(ce que l'on cherche, comment on s y est pris, ce qu'on a trouvé, ce qu on en conclus)
2.1 explication de mise en forme des graphs et résultats d'analyses (pourquoi on transmet l'information comme cela ?)
2.2 explication des recommandations (bilan des graphs et résultats d analyses montrés, ce qu il faut en pensé)
3.1 Identification du public visé et adaptation pour compréhension simple, pourquoi le choix du powerpoint
3.2 Realisation et explication doc technique (dans le mémoire directement on dirait)

BLOC3:
-necessite choix de dev:

-attente classique:
problématiques
dimensionnement projet, ressources humaines, matérielles, chiffrages, analyse faisabilité
documentation projet (futur realisation, qui travail sur quoi, spécifications techniques)
planning gantt, chiffrage des taches, sprint planning, retroplanning (matrice raci des compétences mais je suis tout seul ?)
outil de ticket et de suivi de l avancement, respect des delais, maitrise des couts ?
potentiel formations a suivre suivant les besoins (amenagement special pour les handicapés ?)
comment communiquer et manager de manière juste et equitable, transmettre l infos
arbitrage d'un potentiel problème et trouver des solutions en cas de risques avéré (mode agile)
veille technologique, mise en place
RSE(blabla l 'écologie ce qu on met en place ect)

Attention ! pour doc technique ou utilisateurs, expliquer comment on la réalisé, architecture de doc, puis un exemple d 'un point précis par exemple.

///////////////////////////////////////////////////////
BLOC4:
-necessite choix de dev:
ENTREPOT DE DONNES
PIPELINE CI /CD (explication dockerfile, test unitaire peuvent suffire)
PIPELINE TEMPS REEL
ORCHESTRATEUR
CALCULS DISTRIBUES

-attente classique:
doc besoin enjeux
choix archi selectionné et pourquoi
document technique permettant l utilisation de l archi et de l appli
cahier de recettes(tests), résultats des tests, bugs trouvés, fixés, etc
incident, suivi de l'incident, comment il a été réparé.


